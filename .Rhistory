?selectInput
?selectInput
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
library(shiny)
runApp()
dir()
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp()
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
?checkBoxInput
?checkboxInput
?checkboxInput
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp()
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
rm(list = ls())
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
ifelse(TRUE, 'scatter', NULL)
ifelse(FALSE, 'scatter', NULL)
if (TRUE)
if (TRUE)
print('hi')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
str(diamonds)
str(diamonds)
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
list(x=1, y=2, z=3)
a <- list(x=1, y=2, z=3)
b <- c(1, 2, 4)
lapply(a, function(x) x %in% b)
lapply(a, function(x) {x %in% b})
lapply(a, function(x) {
if (x %in% b)
x <- NULL
})
lapply(a, function(x) {
(x %in% b)
})
a[lapply(a, function(x) {(x %in% b)})]
for (i in a)
print(i)
for (i in names(a))
print(i)
colnames <- b
for (i in names(a)) {
print(a[[i]])
}
a
for (i in names(a)) {
if (a[[i]] %in% b)
next
else
a[[i]] <- NULL
}
a
a
a <- c(a, z=3)
b
a
for (i in names(a)) {
if (a[[i]] %in% b)
next
else
a[i] <- NULL
}
a
a <- c(a, z=3)
a
for (i in names(a)) {
if (a[[i]] %in% b)
next
else
a[i] <- list(NULL)
}
a
ensureCorrectPlotInputs <- function(colnames, plotInputsList) {
for (i in names(plotInputsList)) {
if (plotInputsList[[i]] %in% colnames)
next
else
plotInputsList[i] <- list(NULL)
}
return(plotInputsList)
}
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
a
a[[z]]
a[['z']]
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
## this function ensures correct plot inputs for an updated dataset
ensureCorrectPlotInputs <- function(plotInputsList, colnames) {
for (name in names(plotInputsList)) {
if (!is.null(plotInputsList[[i]]))
if (any(name %in% c('x', 'y', 'color', 'size', 'shape', 'facetRow', 'facetCol', 'facetWrap')))
if (!(plotInputsList[[name]] %in% colnames))
plotInputsList[name] <- list(NULL)
}
return(plotInputsList)
}
## this function ensures correct plot inputs for an updated dataset
ensureCorrectPlotInputs <- function(plotInputsList, colnames) {
print('fuck')
for (name in names(plotInputsList)) {
if (!is.null(plotInputsList[[i]]))
if (any(name %in% c('x', 'y', 'color', 'size', 'shape', 'facetRow', 'facetCol', 'facetWrap')))
if (!(plotInputsList[[name]] %in% colnames))
plotInputsList[name] <- list(NULL)
}
return(plotInputsList)
}
runApp('./inst/visualToolkit')
a
a['t'] <- list(NULL)
a
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
fuk
colnames
ensureCorrectPlotInputs(fuk, colnames)
ensureCorrectPlotInputs <- function(plotInputsList, colnames) {
for (name in names(plotInputsList)) {
if (!is.null(plotInputsList[[name]])) {
if (any(name %in% c('x', 'y', 'facetRow', 'facetCol', 'facetWrap')))
print(name)
if (!(plotInputsList[[name]] %in% colnames))
plotInputsList[name] <- list(NULL)
else if (any(name %in% c('color', 'size', 'shape')))
if (!(plotInputsList[[name]] %in% colnames)) {
asFactorName <- paste0(name, 'AsFactor')
plotInputsList[name] <- plotInputsList[asFactorName] <- list(NULL)
}
}
}
return(plotInputsList)
}
ensureCorrectPlotInputs(fuk, colnames)
## this function ensures correct plot inputs for an updated dataset
ensureCorrectPlotInputs <- function(plotInputsList, colnames) {
for (name in names(plotInputsList)) {
if (!is.null(plotInputsList[[name]])) {
if (any(name %in% c('x', 'y', 'facetRow', 'facetCol', 'facetWrap')))
if (!(plotInputsList[[name]] %in% colnames))
plotInputsList[name] <- list(NULL)
else if (any(name %in% c('color', 'size', 'shape')))
print(name)
if (!(plotInputsList[[name]] %in% colnames)) {
asFactorName <- paste0(name, 'AsFactor')
plotInputsList[name] <- plotInputsList[asFactorName] <- list(NULL)
}
}
}
return(plotInputsList)
}
ensureCorrectPlotInputs(fuk, colnames)
fuk
fuk
fuk
## this function ensures correct plot inputs for an updated dataset
ensureCorrectPlotInputs <- function(plotInputsList, colnames) {
for (name in names(plotInputsList)) {
if (!is.null(plotInputsList[[name]])) {
print(name)
if (any(name %in% c('x', 'y', 'facetRow', 'facetCol', 'facetWrap')))
if (!(plotInputsList[[name]] %in% colnames))
plotInputsList[name] <- list(NULL)
else if (any(name %in% c('color', 'size', 'shape')))
print(name)
if (!(plotInputsList[[name]] %in% colnames)) {
asFactorName <- paste0(name, 'AsFactor')
plotInputsList[name] <- plotInputsList[asFactorName] <- list(NULL)
}
}
print('---')
}
return(plotInputsList)
}
ensureCorrectPlotInputs(fuk, colnames)
ensureCorrectPlotInputs <- function(plotInputsList, colnames) {
for (name in names(plotInputsList)) {
if (!is.null(plotInputsList[[name]])) {
if (any(name %in% c('x', 'y', 'facetRow', 'facetCol', 'facetWrap')))
if (!(plotInputsList[[name]] %in% colnames))
plotInputsList[name] <- list(NULL)
else if (any(name %in% c('color', 'size', 'shape'))) {
if (!(plotInputsList[[name]] %in% colnames)) {
asFactorName <- paste0(name, 'AsFactor')
plotInputsList[name] <- plotInputsList[asFactorName] <- list(NULL)
}
}
}
print('---')
}
return(plotInputsList)
}
ensureCorrectPlotInputs(fuk, colnames)
ensureCorrectPlotInputs <- function(plotInputsList, colnames) {
for (name in names(plotInputsList)) {
if (!is.null(plotInputsList[[name]])) {
if (any(name %in% c('x', 'y', 'facetRow', 'facetCol', 'facetWrap'))) {
if (!(plotInputsList[[name]] %in% colnames)) {
plotInputsList[name] <- list(NULL)
}
} else if (any(name %in% c('color', 'size', 'shape'))) {
print(name)
if (!(plotInputsList[[name]] %in% colnames)) {
asFactorName <- paste0(name, 'AsFactor')
plotInputsList[name] <- plotInputsList[asFactorName] <- list(NULL)
}
}
}
print('---')
}
return(plotInputsList)
}
ensureCorrectPlotInputs(fuk, colnames)
## this function ensures correct plot inputs for an updated dataset
ensureCorrectPlotInputs <- function(plotInputsList, colnames) {
for (name in names(plotInputsList)) {
if (!is.null(plotInputsList[[name]])) {
if (any(name %in% c('x', 'y', 'facetRow', 'facetCol', 'facetWrap'))) {
if (!(plotInputsList[[name]] %in% colnames)) {
plotInputsList[name] <- list(NULL)
}
} else if (any(name %in% c('color', 'size', 'shape'))) {
if (!(plotInputsList[[name]] %in% colnames)) {
asFactorName <- paste0(name, 'AsFactor')
plotInputsList[name] <- plotInputsList[asFactorName] <- list(NULL)
}
}
}
print('---')
}
return(plotInputsList)
}
rm(list = ls())
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
?numericInput
runApp('./inst/visualToolkit')
?color
?colorInput
?coluorInput
?colourInput
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
rm(list = ls())
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
NULL != '2' | 'hi' != '.'
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
NULL != '.' | TRUE
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
ggplot(mtcars) +
geom_point(aes(x=hp, y=mpg)) +
theme(text=element_text(family='Times', face='italic', size=18, hjust=1, vjust=1))
ggplot(mtcars) +
geom_point(aes(x=hp, y=mpg)) +
theme(text=element_text(family='Times', face='italic', size=18, hjust=-1, vjust=1))
ggplot(mtcars) +
geom_point(aes(x=hp, y=mpg)) +
theme(text=element_text(family='Times', face='italic', size=18, hjust=0, vjust=1))
ggplot(mtcars) +
geom_point(aes(x=hp, y=mpg)) +
theme(text=element_text(family='Times', face='italic', size=18, hjust=2, vjust=1.5))
ggplot(mtcars) +
geom_point(aes(x=hp, y=mpg)) +
theme(text=element_text(family='Times', face='italic', size=18, hjust=0.5, vjust=0.5))
ggplot(mtcars) +
geom_point(aes(x=hp, y=mpg)) +
theme(text=element_text(family='Times', face='italic', size=18, hjust=1, vjust=1))
runApp('./inst/visualToolkit')
ggplot(mtcars) +
geom_point(aes(x=hp, y=mpg)) +
theme(text=element_text(family='Calibri', face='italic', size=18, hjust=1, vjust=1))
ggplot(mtcars) +
geom_point(aes(x=hp, y=mpg)) +
theme(text=element_text(family='Calibri', face='bold', size=18, hjust=1, vjust=1))
ggplot(mtcars) +
geom_point(aes(x=hp, y=mpg)) +
theme(text=element_text(family='Times', face='bold', size=18, hjust=1, vjust=1))
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
ggplot(mtcars) +
geom_point(aes(x=hp, y=mpg)) +
theme(text=element_text(family='Times', face='bold', color='red', size=18, hjust=1, vjust=1))
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
?observeEvent
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
ggplot(mtcars) + geom_point(aes(x=hp, y=mpg)) + ggtitle('hello') + xlab('kitty') + ylab('why')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
library(ggthemes)
install.packages('ggthemes')
library(ggthemes)
runApp('./inst/visualToolkit')
sessionInfo()
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
?scale_colour_wsj
?scale_colour_wsj
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
library(shiny)
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
runApp('./inst/visualToolkit')
install.packages("ggthemes")
library(visualToolkit)
visualToolkit()
library("visualToolkit", lib.loc="~/R/win-library/3.2")
visualToolkit()
visualToolkit()
